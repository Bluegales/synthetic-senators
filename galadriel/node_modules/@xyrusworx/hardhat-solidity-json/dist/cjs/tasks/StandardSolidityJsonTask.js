"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("hardhat/config");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
async function makeDirIfNotExists(directory) {
    await new Promise((resolve) => {
        fs_1.default.access(directory, function (err) {
            if (err && err.code === 'ENOENT') {
                fs_1.default.mkdirSync(directory, { recursive: true });
            }
            resolve();
        });
    });
}
// noinspection JSUnusedGlobalSymbols
exports.default = (0, config_1.task)("solidity-json", "Extract Standard Solidity Input JSON", async (taskArgs, hre) => {
    const names = await hre.artifacts.getAllFullyQualifiedNames();
    const baseDir = "./artifacts/solidity-json";
    const handled = [];
    for (const name of names) {
        const [fileName] = name.split(':');
        // skip, if non-local file
        if (!fs_1.default.existsSync(path_1.default.join("./", fileName))) {
            continue;
        }
        // only one output per file
        if (handled.find(x => x === fileName)) {
            continue;
        }
        handled.push(fileName);
        const buildInfo = await hre.artifacts.getBuildInfo(name);
        const artifactStdJson = JSON.stringify(buildInfo.input, null, 4);
        const fullFileName = path_1.default.join(baseDir, fileName + ".json");
        const directoryName = path_1.default.dirname(fullFileName);
        console.log("> Extracting standard Solidity Input JSON for", fileName);
        await makeDirIfNotExists(directoryName);
        fs_1.default.writeFileSync(fullFileName, artifactStdJson);
    }
});
//# sourceMappingURL=StandardSolidityJsonTask.js.map