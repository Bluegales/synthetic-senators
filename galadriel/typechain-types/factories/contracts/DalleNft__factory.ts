/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DalleNft, DalleNftInterface } from "../../contracts/DalleNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOracleAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialPrompt",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chatId",
        type: "uint256",
      },
    ],
    name: "MintInputCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOracleAddress",
        type: "address",
      },
    ],
    name: "OracleAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newPrompt",
        type: "string",
      },
    ],
    name: "PromptUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chatId",
        type: "uint256",
      },
    ],
    name: "getMessageHistoryContents",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getRoles",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "initializeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintInputs",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "prompt",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isMinted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "runId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "response",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "onOracleFunctionResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prompt",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOracleAddress",
        type: "address",
      },
    ],
    name: "setOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPrompt",
        type: "string",
      },
    ],
    name: "setPrompt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620004d557620021f8803803806200001d81620004fa565b928339810190604081830312620004d55780516001600160a01b03811690819003620004d5576020828101516001600160401b0393848211620004d5570193601f90808287011215620004d55785518581116200030957601f19966200008982850189168601620004fa565b92828452858383010111620004d557849060005b838110620004c057505060009183010152620000b8620004da565b92600684526544414c4c2d4560d01b81850152620000d5620004da565b9460039586815262444c4560e81b83820152855188811162000309576000546001978882811c92168015620004b5575b86831014620002e85781888493116200045f575b508590888311600114620003fb57600092620003ef575b5050600019828a1b1c191690871b176000555b80519088821162000309578654908782811c92168015620003e4575b85831014620002e85781878493116200038e575b5084908783116001146200032b576000926200031f575b505060001982891b1c191690861b1785555b60018060a01b03193381600d541617600d55600e541617600e5581519586116200030957600f548481811c91168015620002fe575b82821014620002e8578381116200029c575b50809286116001146200022e57508495509084929160009562000222575b50501b92600019911b1c191617600f555b604051611cd79081620005218239f35b01519350388062000201565b93929585908116600f60005285600020956000905b8983831062000281575050501062000266575b50505050811b01600f5562000212565b01519060f884600019921b161c191690553880808062000256565b85870151895590970196948501948893509081019062000243565b600f600052816000208480890160051c820192848a10620002de575b0160051c019085905b828110620002d1575050620001e3565b60008155018590620002c1565b92508192620002b8565b634e487b7160e01b600052602260045260246000fd5b90607f1690620001d1565b634e487b7160e01b600052604160045260246000fd5b0151905038806200018a565b908b8994169184600052866000209260005b888282106200037757505084116200035e575b505050811b0185556200019c565b0151600019838b1b60f8161c1916905538808062000350565b8385015186558c979095019493840193016200033d565b90915087600052846000208780850160051c820192878610620003da575b918a91869594930160051c01915b828110620003ca57505062000173565b600081558594508a9101620003ba565b92508192620003ac565b91607f16916200015f565b01519050388062000130565b908c8a94169160008052876000209260005b898282106200044857505084116200042f575b505050811b0160005562000143565b0151600019838c1b60f8161c1916905538808062000420565b8385015186558d979095019493840193016200040d565b90915060008052856000208880850160051c820192888610620004ab575b918b91869594930160051c01915b8281106200049b57505062000119565b600081558594508b91016200048b565b925081926200047d565b91607f169162000105565b8181018301518582018401528692016200009d565b600080fd5b60408051919082016001600160401b038111838210176200030957604052565b6040519190601f01601f191682016001600160401b03811183821017620003095760405256fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146112ed5750806306fdde0314611245578063081812fc14611209578063095ea7b31461112e57806318160ddd1461110f57806323b872dd146110f7578063271aa34314610e215780632f745c5914610d9d57806342842e0e14610d745780634c69c00f14610cff5780634e3b128114610c995780634f6ccce714610c445780636352211e14610c1057806370a0823114610be35780637397454d146107645780637c65d7111461073357806395d89b4114610650578063a22cb465146105b4578063a89ae4ba1461058b578063b4ac024f146103b3578063b88d4fde1461034b578063c87b56dd146102f7578063d3c7f187146102ab578063e985e9c5146102595763eb17429a1461013757600080fd5b34610255576020918260031936011261025157610152611c5f565b9261015b611556565b91358552600c81526001948584822001908451936101818151809286808901910161138d565b84019080978354936101928561151c565b9482811690811561022a57506001146101ea575b506101e688886101c8896101c3818f03601f198101835282611489565b611c27565b6101d183611c94565b526101db82611c94565b5051918291826116b8565b0390f35b9091809394959950528782205b848310610217575050500190930192806101c3816101e66101c8386101a6565b80548484018a01529188019181016101f7565b60ff1916858801525050505081151590910201019350806101c3816101e66101c8386101a6565b8380fd5b8280fd5b8382346102a757806003193601126102a75760ff816020936102796113d5565b6102816113f0565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b50346102555780600319360112610255576101e692506102c96113d5565b506102d2611c5f565b918151906102df8261146d565b8152633ab9b2b960e11b60208201526101d183611c94565b508290346102a75760203660031901126102a7576101e6923561031981611b5d565b508252600a60205261032c818320611614565b9181516103388161143b565b52519182916020835260208301906113b0565b5050346102a75760803660031901126102a7576103666113d5565b61036e6113f0565b9060643567ffffffffffffffff81116103af57366023820112156103af576103ac938160246103a2933693013591016114c7565b9160443591611a0e565b80f35b8480fd5b509190346102a7576020806003193601126102555767ffffffffffffffff9382358581116103af576103e890369085016114fe565b926103fe60018060a01b03600d54163314611be5565b83519586116105785750610413600f5461151c565b601f8111610516575b5081601f8611600114610493579480859661045c9691610488575b508160011b916000199060031b1c191617600f555b519282848094519384920161138d565b81010390207fa21918fe7101aad6a2dac256e7ade3e3130c8e7751eb2e31e58538baaede398a8280a280f35b905084015138610437565b600f85527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290601f198716865b8181106104ff575091879161045c9798600194106104e6575b5050811b01600f5561044c565b86015160001960f88460031b161c1916905538806104d9565b91928560018192868a0151815501940192016104c0565b600f85527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802601f870160051c81019184881061056e575b601f0160051c01905b818110610563575061041c565b858155600101610556565b909150819061054d565b634e487b7160e01b855260419052602484fd5b8382346102a757816003193601126102a757600e5490516001600160a01b039091168152602090f35b50346102555780600319360112610255576105cd6113d5565b90602435918215158093036103af576001600160a01b031692831561063b5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8382346102a757816003193601126102a7578051908260018054916106748361151c565b8086529282811690811561070b57506001146106af575b50505061069d826101e6940383611489565b519182916020835260208301906113b0565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8286106106f35750505061069d8260206101e6958201019461068b565b805460208787018101919091529095019481016106d6565b6101e697508693506020925061069d94915060ff191682840152151560051b8201019461068b565b8382346102a757816003193601126102a7576101e690610751611556565b90519182916020835260208301906113b0565b508290346102a75760603660031901126102a757823560249182359467ffffffffffffffff95868111610bdf5761079e90369083016114fe565b604435878111610bdb576107b590369084016114fe565b50600e546001600160a01b03919082163303610ba257848752602095600c875284882092600284019384549460ff8616610b6b579082916001809760ff19161790555416908115610b55579089818a8a828b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b98848852600286528288205416968792600284159788159c8d610b22575b878552600382528385208054909101905587845252812080546001600160a01b0319168517905580a415610a9c5750600854898c5260098b5280898d2055600160401b811015610a8a57906108bf8a6108a6848a879601600855611b98565b90919082549060031b91821b91600019901b1916179055565b03610a3e575b50610a2a57858852600a8752848820938251998a11610a195750506108ea835461151c565b601f81116109d3575b508590601f8911600114610955579780928192899a7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79a9461094a575b50501b916000199060031b1c19161790555b51908152a180f35b015192508a80610930565b838852868820909891601f198316895b8181106109be575099837ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79a9b106109a5575b505050811b019055610942565b015160001960f88460031b161c19169055888080610998565b8b830151845592850192918901918901610965565b838852868820601f8a0160051c810191888b10610a0f575b601f0160051c019083905b828110610a045750506108f3565b8981550183906109f6565b90915081906109eb565b634e487b7160e01b89526041905287fd5b84516339e3563760e11b8152808501899052fd5b610a478161171a565b600019810191908211610a78578a5260068952868a20818b52895287878b2055878a5260078952868a20558a6108c5565b634e487b7160e01b8b5260118752838bfd5b634e487b7160e01b8c5260418852848cfd5b908082146108bf578b8b8a610ab08461171a565b928d8152600783528181205492848403610aea575b5090508c9150528c8a812055818d5260068c52898d20908d528b528b898120556108bf565b60079086835260068152838320868452815283832054878452600682528484208685528252808585205583525220558e8a8e8e610ac5565b600089815260046020526040902080546001600160a01b0319169055868552600382528385208054600019019055610847565b8651633250574960e11b81528087018b90528390fd5b875162461bcd60e51b81528088018b90526012818601527113919508185b1c9958591e481b5a5b9d195960721b6044820152606490fd5b835162461bcd60e51b81526020818501526014818801527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b8680fd5b8580fd5b8382346102a75760203660031901126102a757602090610c09610c046113d5565b61171a565b9051908152f35b508234610c41576020366003190112610c415750610c3060209235611b5d565b90516001600160a01b039091168152f35b80fd5b50903461025557602036600319011261025557803592600854841015610c7e57602083610c7086611b98565b91905490519160031b1c8152f35b6044939192519263295f44f760e21b84528301526024820152fd5b50903461025557602036600319011261025557918192358152600c602052209060018060a01b038254169060ff6002610cd460018601611614565b9401541690610cf4815194859485526060602086015260608501906113b0565b911515908301520390f35b8334610c41576020366003190112610c4157610d196113d5565b600d546001600160a01b039190610d339083163314611be5565b16806bffffffffffffffffffffffff60a01b600e541617600e557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b8382346102a7576103ac90610d8836611406565b91925192610d958461143b565b858452611a0e565b508234610c415781600319360112610c4157610db76113d5565b9260243590610dc58561171a565b821015610df557506001600160a01b03909316815260066020908152828220938252928352819020549051908152f35b925163295f44f760e21b81526001600160a01b0390941692840192835260208301525081906040010390fd5b509134610c4157602091826003193601126102a75767ffffffffffffffff93813585811161025157610e5690369084016114fe565b91600b5492600019968785146110e457600197888601600b55858752600c885284872091336bffffffffffffffffffffffff60a01b8454161783558983019184519182116110d157610ea8835461151c565b601f811161108f575b50899a899a97989950878b601f85116001146110215793610f3a969381610f9c9b9a999794819460029894611016575b501b9260031b1c19161790555b01805460ff191690556101c384610f03611556565b88519381610f1a869351809286808701910161138d565b8201610f2e8251809386808501910161138d565b01038084520182611489565b600e548551634b04236b60e01b815292830187905260606024840152601060648401526f34b6b0b3b2afb3b2b732b930ba34b7b760811b608484015260a06044840152919384926001600160a01b0316918391899183919060a48301906113b0565b03925af1801561100c578392918691610fdd575b505051927fd469a7325078a9e6013e0619cb6e9472faf345ebd8469fe6bf9fc7ee67008e03339180a38152f35b90809293503d8311611005575b610ff48183611489565b810103126102555781908438610fb0565b503d610fea565b82513d86823e3d90fd5b890151935038610ee1565b50848c52888c2091939290601f1984168d5b81811061107a575092600295928592610f3a9996610f9c9d9c9b999610611062575b505050811b019055610eee565b8801519060f88460031b161c19169055388080611055565b89830151855593860193918b01918b01611033565b838a528a8a20601f840160051c8101918c85106110c7575b601f0160051c01905b8181106110bd5750610eb1565b8a81558c016110b0565b90915081906110a7565b634e487b7160e01b895260418652602489fd5b634e487b7160e01b865260118352602486fd5b8334610c41576103ac61110936611406565b91611753565b8382346102a757816003193601126102a7576020906008549051908152f35b50346102555780600319360112610255576111476113d5565b9160243561115481611b5d565b331515806111f6575b806111cd575b6111b7576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615611163565b506001600160a01b03811633141561115d565b5090346102555760203660031901126102555791826020933561122b81611b5d565b50825283528190205490516001600160a01b039091168152f35b8382346102a757816003193601126102a7578051908280546112668161151c565b8085529160019180831690811561070b57506001146112915750505061069d826101e6940383611489565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8286106112d55750505061069d8260206101e6958201019461068b565b805460208787018101919091529095019481016112b8565b84908434610255576020366003190112610255573563ffffffff60e01b81168091036102555760209250632483248360e11b8114908115611330575b5015158152f35b63780e9d6360e01b81149150811561134a575b5083611329565b6380ac58cd60e01b81149150811561137c575b811561136b575b5083611343565b6301ffc9a760e01b14905083611364565b635b5e139f60e01b8114915061135d565b60005b8381106113a05750506000910152565b8181015183820152602001611390565b906020916113c98151809281855285808601910161138d565b601f01601f1916010190565b600435906001600160a01b03821682036113eb57565b600080fd5b602435906001600160a01b03821682036113eb57565b60609060031901126113eb576001600160a01b039060043582811681036113eb579160243590811681036113eb579060443590565b6020810190811067ffffffffffffffff82111761145757604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761145757604052565b90601f8019910116810190811067ffffffffffffffff82111761145757604052565b67ffffffffffffffff811161145757601f01601f191660200190565b9291926114d3826114ab565b916114e16040519384611489565b8294818452818301116113eb578281602093846000960137010152565b9080601f830112156113eb57816020611519933591016114c7565b90565b90600182811c9216801561154c575b602083101461153657565b634e487b7160e01b600052602260045260246000fd5b91607f169161152b565b60405190600082600f549161156a8361151c565b808352926001908181169081156115f25750600114611593575b5061159192500383611489565b565b600f600090815291507f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b8483106115d75750611591935050810160200138611584565b81935090816020925483858a010152019101909185926115be565b90506020925061159194915060ff191682840152151560051b82010138611584565b90604051918260008254926116288461151c565b9081845260019485811690816000146116955750600114611652575b505061159192500383611489565b9093915060005260209081600020936000915b81831061167d57505061159193508201013880611644565b85548884018501529485019487945091830191611665565b91505061159194506020925060ff191682840152151560051b8201013880611644565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106116ec5750505050505090565b909192939495848061170a600193603f198682030187528a516113b0565b98019301930191949392906116dc565b6001600160a01b0316801561173a57600052600360205260406000205490565b6040516322718ad960e21b815260006004820152602490fd5b6001600160a01b03828116939184156119f557600094838652602095600287526040968488832054169633151580611967575b5087158015611934575b84845260038352898420805460010190558784526002835289842080546001600160a01b0319168617905587858a7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a4156118b85760085487845260098352808a852055600160401b8110156118a457876108a68260016118169401600855611b98565b838803611852575b5050505016928383036118315750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b61185b9061171a565b6000198101939084116118905782916007918a945260068152838320858452815287848420558783525220553880808061181e565b634e487b7160e01b83526011600452602483fd5b634e487b7160e01b84526041600452602484fd5b878414611816576118c88861171a565b87845260078352898420548181036118fd575b50878452838a8120558884526006835289842090845282528289812055611816565b898552600684528a852082865284528a8520548a8652600685528b86208287528552808c8720558552600784528a852055386118db565b600088815260046020526040902080546001600160a01b0319169055888452600383528984208054600019019055611790565b806119b4575b156119785738611786565b888789611995576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b5033881480156119d9575b8061196d57508683526004825233868a852054161461196d565b5087835260058252888320338452825260ff89842054166119bf565b604051633250574960e11b815260006004820152602490fd5b611a19838383611753565b813b611a26575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b03928316602483015260448201949094526080606482015260209592909116939092908390611a749060848301906113b0565b039285816000958187895af1849181611b1d575b50611ae8575050503d600014611ae0573d611aa2816114ab565b90611ab06040519283611489565b81528091843d92013e5b80519283611adb57604051633250574960e11b815260048101849052602490fd5b019050fd5b506060611aba565b919450915063ffffffff60e01b1603611b05575038808080611a20565b60249060405190633250574960e11b82526004820152fd5b9091508681813d8311611b56575b611b358183611489565b810103126103af57516001600160e01b0319811681036103af579038611a88565b503d611b2b565b6000818152600260205260409020546001600160a01b0316908115611b80575090565b60249060405190637e27328960e01b82526004820152fd5b600854811015611bcf5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b15611bec57565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b90611591602160405184611c4582965180926020808601910161138d565b8101601160f91b6020820152036001810185520183611489565b604051611c6b8161146d565b600181528060005b602080821015611c8e57906060602092828501015201611c73565b50505090565b805115611bcf576020019056fea26469706673582212204f023a589cb6a7938d1ab75fae22706c8977dba874317a6dd0801dd2e274e1ec64736f6c63430008140033";

type DalleNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DalleNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DalleNft__factory extends ContractFactory {
  constructor(...args: DalleNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOracleAddress: AddressLike,
    initialPrompt: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOracleAddress,
      initialPrompt,
      overrides || {}
    );
  }
  override deploy(
    initialOracleAddress: AddressLike,
    initialPrompt: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOracleAddress,
      initialPrompt,
      overrides || {}
    ) as Promise<
      DalleNft & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DalleNft__factory {
    return super.connect(runner) as DalleNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DalleNftInterface {
    return new Interface(_abi) as DalleNftInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DalleNft {
    return new Contract(address, _abi, runner) as unknown as DalleNft;
  }
}
