/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ChatGpt, ChatGptInterface } from "../../contracts/ChatGpt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOracleAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "knowledgeBaseCID",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chatId",
        type: "uint256",
      },
    ],
    name: "ChatCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOracleAddress",
        type: "address",
      },
    ],
    name: "OracleAddressUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "runId",
        type: "uint256",
      },
    ],
    name: "addMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chatRuns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "messagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chatId",
        type: "uint256",
      },
    ],
    name: "getMessageHistoryContents",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chatId",
        type: "uint256",
      },
    ],
    name: "getMessageHistoryRoles",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "knowledgeBase",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "runId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "documents",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "onOracleKnowledgeBaseQueryResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "runId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "response",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "onOracleLlmResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOracleAddress",
        type: "address",
      },
    ],
    name: "setOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "startChat",
    outputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620002475762001765803803806200001d816200024c565b928339810190604081830312620002475780516001600160a01b038116919082900362000247576020818101516001600160401b039283821162000247570192601f90858286011215620002475784518481116200021c57601f19956200008a828501881686016200024c565b978289528583830101116200024757849060005b838110620002325750506000918801015260018060a01b031933816002541617600255600354161760035584519283116200021c576004948554926001938481811c9116801562000211575b82821014620001fc57838111620001b1575b5080928511600114620001485750839450908392916000946200013c575b50501b916000199060031b1c19161790555b6040516114f29081620002738239f35b0151925038806200011a565b9294849081168760005284600020946000905b888383106200019657505050106200017c575b505050811b0190556200012c565b015160001960f88460031b161c191690553880806200016e565b8587015188559096019594850194879350908101906200015b565b87600052816000208480880160051c820192848910620001f2575b0160051c019085905b828110620001e5575050620000fc565b60008155018590620001d5565b92508192620001cc565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000ea565b634e487b7160e01b600052604160045260246000fd5b8181018301518a82018401528692016200009e565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021c5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c80632843d1351461093d5780632d08d82a146107715780634c69c00f146106c6578063632cc98b1461068d578063941fac3714610463578063a1b67ed1146102ed578063a89ae4ba146102c4578063eb17429a1461022d578063ed6e39e51461017a5763f997cc251461008e57600080fd5b34610176578260031936011261017657805191838154906100ae82610ee8565b8086529260019280841690811561014b57506001146100ef575b6100eb86866100d9828b0383610da8565b51918291602083526020830190610e61565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610133575050506100d98260206100eb9582010194386100c8565b80546020878701810191909152909501948101610115565b90506100eb9750869350602092506100d994915060ff191682840152151560051b82010194386100c8565b8280fd5b503461017657602091826003193601126102295792919235918281528084526001936101aa858484200154611472565b9382865b6101c0575b8451806100eb8882610e86565b8184528383528685852001805482101561022357816101f86101ff6101ec8b9897969561021a95611002565b50895192838092610f22565b0382610da8565b610209828a61145e565b52610214818961145e565b50611439565b909192936101ae565b506101b3565b8380fd5b5091346102c157602091826003193601126102bd57919091359182815280825260019161025e838684200154611472565b9382845b610274575b8651806100eb8882610e86565b818452838352848785200180548210156102b75781866101ff61029e82989796956102ae95611002565b506101f88c518094819301610f22565b90919293610262565b50610267565b5080fd5b80fd5b8382346102bd57816003193601126102bd5760035490516001600160a01b039091168152602090f35b509190346102bd5760603660031901126102bd5767ffffffffffffffff602435818111610229576103219036908401610de2565b90604435908111610229576103399036908401610de2565b5061034f60018060a01b03600354163314611374565b81358352602083815284842090600260018301920193845460001981019081116104505761037d9084611002565b50875161039f8161039186820180956113b7565b03601f198101835282610da8565b519020875183810190633ab9b2b960e11b82528381526103be81610d76565b5190200361040f575068185cdcda5cdd185b9d60ba1b6104009495966103e2610fb8565b948386015251916103f283610d76565b600983528201528252611034565b61040a8154611439565b905580f35b60649187519162461bcd60e51b8352820152601860248201527f4e6f206d65737361676520746f20726573706f6e6420746f00000000000000006044820152fd5b634e487b7160e01b875260118252602487fd5b5034610176578060031936011261017657813567ffffffffffffffff8111610229576104929036908401610de2565b9060243591828552602093858552828620936001850160028601908154600019810190811161067a576104c59082611002565b5086516104d9816103918c820180956113b7565b51902086518981019068185cdcda5cdd185b9d60ba1b8252600981526104fe81610d76565b519020036106375795546001600160a01b039690871633036105f65790610540889594939261052b610fb8565b908688830152610539610fe2565b8252611034565b61054a8154611439565b9055876105578354610ee8565b156105c25761057f96600354169286519788958694859363a252a95160e01b85528401611295565b03925af19081156105b9575061059457505080f35b813d83116105b2575b6105a78183610da8565b810103126102c15780f35b503d61059d565b513d85823e3d90fd5b5091509360249060035416948785519687948593636c4e899160e11b85528401525af19081156105b9575061059457505080f35b606484898089519262461bcd60e51b845283015260248201527f4f6e6c792063686174206f776e65722063616e20616464206d657373616765736044820152fd5b855162461bcd60e51b8152808501899052601f60248201527f4e6f20726573706f6e736520746f2070726576696f7573206d657373616765006044820152606490fd5b634e487b7160e01b8a526011855260248afd5b509034610176576020366003190112610176579181923581528060205220600260018060a01b0382541691015482519182526020820152f35b5090346101765760203660031901126101765780356001600160a01b03818116939184900361076d57600254163303610734575050600380546001600160a01b031916821790557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b906020606492519162461bcd60e51b8352820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152fd5b8480fd5b509190346102bd576020928360031936011261017657813567ffffffffffffffff8111610229576107a59036908401610de2565b9160019283548552848652836002848720336bffffffffffffffffffffffff60a01b8254161781556107ef6107d8610fb8565b858b8201526107e5610fe2565b8152848301611034565b01558354938085019081861161092a57908792915561080e8354610ee8565b156108ba5761083f92858760018060a01b03600354169287519687958694859363a252a95160e01b85528401611295565b03925af180156108b0578392918691610881575b50505b51927fd1de2c4de50323207202f3df0bb1dec1a42e233aec245f25519d674c10bd72ca339180a38152f35b90809293503d83116108a9575b6108988183610da8565b810103126101765781908438610853565b503d61088e565b82513d86823e3d90fd5b506003548351636c4e899160e11b81529283018590528290602490829088906001600160a01b03165af180156108b05783929186916108fb575b5050610856565b90809293503d8311610923575b6109128183610da8565b8101031261017657819084386108f4565b503d610908565b634e487b7160e01b875260118452602487fd5b509190346102bd5760603660031901126102bd5780359060249384359267ffffffffffffffff95868511610d725736602386011215610d7257848401359461098486610dca565b9061099185519283610da8565b868252602096838884019160051b83010191368311610d6e57848101915b838310610d445750505050604435888111610d40576109d19036908701610de2565b506003546001600160a01b0391906109ec9083163314611374565b838852878752848820600281015460019a9160001991828101918d01908211610d2e579081610a1e82610a2e94611002565b508c8b51948591820180936113b7565b0393610a42601f1995868101835282610da8565b5190208a518d810190633ab9b2b960e11b82528d8152610a6181610d76565b51902003610cec578d91610a7491611002565b5001938c895191610a9083610a89818a610f22565b0384610da8565b8c838251610c96575b50908b8f928493945b610c13575b50505050508051938411610c0157610abf8554610ee8565b601f8111610bb9575b508a91601f8511600114610b5757508b9c84939284928d9e9d9b9c9d95610b4c575b50501b9260031b1c19161790555b60035416948785519687948593636c4e899160e11b85528401525af19081156105b95750610b24578280f35b813d8311610b45575b610b378183610da8565b810103126102c15738808280f35b503d610b2d565b015193503880610aea565b8493919d941691858d528b8d20928d5b818110610ba457509d848d9e9f9d9b9c9d10610b8c575b50505050811b019055610af8565b01519060f88460031b161c1916905538808080610b7e565b8f830151855593860193918d01918d01610b67565b858d528b8d20601f860160051c8101918d8710610bf7575b601f0160051c01908e908e5b838210610bec57505050610ac8565b8155018e908e610bdd565b9091508190610bd1565b634e487b7160e01b8c5260418a52868cfd5b82939495919251861015610c8a576021610c809392610c7a92610c36898861145e565b5194519482610c4e8794518092858088019101610e3e565b8301610c6282518093858085019101610e3e565b600560f91b9101918201520386810184520182610da8565b93611439565b91908b8e83610aa2565b82919550849350610aa7565b610ce4919294506034908d519381610cb78693518092848087019101610e3e565b8201907305052932b632bb30b73a1031b7b73a32bc3a1d0560611b90820152036014810184520182610da8565b918c38610a99565b895162461bcd60e51b8152808c018d9052601c818a01527f4e6f206d65737361676520746f2061646420636f6e7465787420746f000000006044820152606490fd5b634e487b7160e01b8c5260118a52868cfd5b8780fd5b82358c8111610d6a578a91610d5f8392893691870101610de2565b8152019201916109af565b8b80fd5b8980fd5b8580fd5b6040810190811067ffffffffffffffff821117610d9257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d9257604052565b67ffffffffffffffff8111610d925760051b60200190565b81601f82011215610e395780359067ffffffffffffffff8211610d925760405192610e17601f8401601f191660200185610da8565b82845260208383010111610e3957816000926020809301838601378301015290565b600080fd5b60005b838110610e515750506000910152565b8181015183820152602001610e41565b90602091610e7a81518092818552858086019101610e3e565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610eba5750505050505090565b9091929394958480610ed8600193603f198682030187528a51610e61565b9801930193019194939290610eaa565b90600182811c92168015610f18575b6020831014610f0257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ef7565b9060009291805491610f3383610ee8565b918282526001938481169081600014610f955750600114610f55575b50505050565b90919394506000526020928360002092846000945b838610610f81575050505001019038808080610f4f565b805485870183015294019385908201610f6a565b9294505050602093945060ff191683830152151560051b01019038808080610f4f565b604051906040820182811067ffffffffffffffff821117610d925760405260606020838281520152565b60405190610fef82610d76565b60048252633ab9b2b960e11b6020830152565b805482101561101e5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b805468010000000000000000811015610d9257611058906001928382018155611002565b61127f57825180519167ffffffffffffffff92838111610d9257849061107e8354610ee8565b93601f9485811161122e575b506020908583116001146111c5576020949291600091836111ba575b5050600019600383901b1c191690831b1781555b019401518051928311610d92576110d18554610ee8565b828111611172575b50602091831160011461111257928293918392600094611107575b50501b916000199060031b1c1916179055565b0151925038806110f4565b90601f198316918560005283826000209360005b8782821061115957505010611140575b505050811b019055565b015160001960f88460031b161c19169055388080611136565b8486015187559095019460209485019487935001611126565b8560005260206000208380860160051c820192602087106111b1575b0160051c019085905b8281106111a55750506110d9565b60008155018590611197565b9250819261118e565b0151905038806110a6565b90601f1983169185600052816000209260005b818110611216575091859391856020989694106111fd575b505050811b0181556110ba565b015160001960f88460031b161c191690553880806111f0565b8284015185558a9690940193602093840193016111d8565b909192506000848152602081208680860160051c82019360208710611276575b908a9695949392910160051c01915b82811061126b57505061108a565b81815589950161125d565b9350819361124e565b634e487b7160e01b600052600060045260246000fd5b92919083526020608081850152600090600454906112b282610ee8565b91826080880152600190818116908160001461134957506001146112ef575b5050506112ea8160039386606094036040880152610e61565b930152565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106113355750505050830160a0016112ea8260606112d1565b805488860160a0015293820193810161131a565b60ff191660a08981019190915293151560051b880190930193506112ea9250849150606090506112d1565b1561137b57565b60405162461bcd60e51b815260206004820152601460248201527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b6000929181546113c681610ee8565b9260019180831690811561141e57506001146113e25750505050565b90919293945060005260209081600020906000915b85831061140d5750505050019038808080610f4f565b8054858401529183019181016113f7565b60ff1916845250505081151590910201915038808080610f4f565b60001981146114485760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561101e5760209160051b010190565b9061147c82610dca565b6114896040519182610da8565b828152809261149a601f1991610dca565b019060005b8281106114ab57505050565b80606060208093850101520161149f56fea26469706673582212209f91249c8fc8729ed726c665836c1af6511098d17d70e5949d66cd8d3318f81e64736f6c63430008140033";

type ChatGptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChatGptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChatGpt__factory extends ContractFactory {
  constructor(...args: ChatGptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOracleAddress: AddressLike,
    knowledgeBaseCID: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOracleAddress,
      knowledgeBaseCID,
      overrides || {}
    );
  }
  override deploy(
    initialOracleAddress: AddressLike,
    knowledgeBaseCID: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOracleAddress,
      knowledgeBaseCID,
      overrides || {}
    ) as Promise<
      ChatGpt & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChatGpt__factory {
    return super.connect(runner) as ChatGpt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatGptInterface {
    return new Interface(_abi) as ChatGptInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ChatGpt {
    return new Contract(address, _abi, runner) as unknown as ChatGpt;
  }
}
